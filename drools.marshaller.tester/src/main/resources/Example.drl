/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.drools.examples.banking

import drools.marshaller.tester.Account;

declare Account
	@role(event)
	@timestamp(timestamp)
end


rule "Rule 01"   
    when
        $account : Account( number != null ) from entry-point "EP"
    then
        System.out.println("Account inserted into working memory: " + $account ); 
        insert( $account );
end 

rule "Rule 02"   
    when
        $account : Account( number != null ) over window:time( 5s )
    then
        System.out.println("Active account retracted: " + $account ); 
        retract( $account );
end 