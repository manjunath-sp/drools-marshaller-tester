/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.drools.examples.banking

import drools.marshaller.tester.Account;
import drools.marshaller.tester.Timeout;
import drools.marshaller.tester.result.ResultProcessor;

global ResultProcessor resultProcessor;

declare Account
	@role(event)
	@timestamp(timestamp)
end

declare Timeout
	@role(event)
	@timestamp(timestamp)
end


rule "Rule 01"   
    when
        $account : Account( number != null ) from entry-point "EP"
    then
        System.out.println("Account inserted into working memory: " + $account ); 
        insert( $account );
        
        long currentTimeInMills = drools.getWorkingMemory().getSessionClock().getCurrentTime();
        Timeout timeout = new Timeout($account.getNumber(), currentTimeInMills);
        insert(timeout);
end 

rule "Rule 02"
	enabled false
    when
        $account : Account( number != null )
    then
        System.out.println("Active account retracted: " + $account ); 
        retract( $account );
end

rule "Rule 03"   
    when
        $account : Account( number != null )
        not Timeout(number == $account.getNumber(), this after[5s, 5s] $account )
    then
        System.out.println("Timeout rule triggered retracted: " + $account ); 
        retract( $account );
end

rule "Rule 04"   
    when
        $account : Account( number == 100 )
        $timeout : Timeout(number == $account.getNumber(), this after[0s, 5s] $account )
    then
        System.out.println("Account #100 add to be processed: " + $account );
        
        resultProcessor.processResults($account);
end